---
- hosts: all
  become: yes
  become_method: sudo
  any_errors_fatal: true
  max_fail_percentage: 0
  vars:
    base_segment: '192.168.55'
    homedir: /opt/foglab
    timezone: Etc/UTC

  
  tasks:
    - name: set hostname
      hostname:
        name: foglab
    - name: Install packages
      apt:
        name: "{{ list }}"
        force_apt_get: yes
      vars:
        list:
          - dnsmasq
          - lxd
          - lxd-client
          - criu
          - unzip
          - bridge-utils
          - thin-provisioning-tools
    
    - name: Set timezone
      timezone:
        name: "{{ timezone }}"

    - name: Add storage volume
      block:
        - name: Extend VG
          lvg:
            vg: vagrant-vg
            pvs: /dev/sda1,/dev/sdb

        - name: Create LV
          lvol:
            vg: vagrant-vg
            lv: storage
            size: 100%FREE
            shrink: no
            state: present
        
        - name: Create file system for storage
          filesystem:
            fstype: ext4
            dev: /dev/mapper/vagrant--vg-storage

        - name: Create mount point
          file:
            path: /storage
            owner: root
            group: root
            mode: 0777
            state: directory

        - name: Mount storage and write entry in fstab
          mount:
            name: /storage
            src: /dev/mapper/vagrant--vg-storage
            fstype: ext4
            state: mounted

    - name: Add group 'lxd' to user 'vagrant'
      user:
        name: vagrant
        groups: lxd
        append: yes
    
    - name: Performance settings
      block:
        - name: Remove any swap
          command: "swapoff -a"

        - name: Remove original swap entry in fstab
          mount: 
            name: none
            src: "/dev/mapper/vagrant--vg-swap_1"
            fstype: swap
            opts: sw
            passno: "0"
            dump: "0"
            state: absent

        - name: Load br_netfilter
          command: "modprobe br_netfilter"

        - name: sysctl changes
          sysctl:
            name: "{{ item.name }}"
            value: "{{ item.value }}"
            reload: yes
          loop:
            - { name: net.ipv4.ip_forward, value: 1 }
            - { name: net.ipv4.conf.all.rp_filter, value: 0 } 
            - { name: net.ipv4.conf.all.proxy_arp, value: 1 }
            - { name: net.ipv4.tcp_keepalive_time, value: 600 } 
            - { name: net.ipv4.tcp_keepalive_intvl, value: 60 }
            - { name: net.ipv4.tcp_keepalive_probes, value: 20 }
            - { name: net.ipv4.ip_nonlocal_bind, value: 1 }
            - { name: net.ipv4.conf.all.accept_redirects, value: 1 }
            - { name: net.ipv4.conf.all.send_redirects, value: 1 }
            - { name: net.ipv4.conf.all.accept_source_route, value: 1 }
            - { name: net.ipv4.tcp_mem, value: 182757 243679 365514 }
            - { name: net.ipv4.conf.all.shared_media, value: 1 }
            - { name: net.ipv6.conf.all.disable_ipv6, value: 1 }
            - { name: net.ipv6.conf.default.disable_ipv6, value: 1 }
            - { name: net.ipv6.conf.lo.disable_ipv6, value: 1 }
            - { name: net.core.netdev_max_backlog, value: 182757 }
            - { name: net.bridge.bridge-nf-call-iptables, value: 1 }
            - { name: fs.inotify.max_queued_events, value: 1048576 }
            - { name: fs.inotify.max_user_instances, value: 1048576 }
            - { name: fs.inotify.max_user_watches, value: 1048576 }
            - { name: vm.max_map_count, value: 262144 }
            - { name: kernel.dmesg_restrict, value: 0}

        - name: Limits changes
          lineinfile:
            path: /etc/security/limits.conf
            line: "{{ item }}"
          loop:
            - "* soft nofile 1048576" 
            - "* hard nofile 1048576" 
            - "root soft nofile 1048576" 
            - "root hard nofile 1048576" 
            - "* soft memlock unlimited" 
            - "* hard memlock unlimited" 

    - name: Security settings
      block:
        - name: Disable ufw (this is a lab :) )
          service:
            name: ufw
            state: stopped

        - name: Remove ssh host check
          become: vagrant
          blockinfile:
            path: ~/.ssh/config
            create: yes
            block: |
              Host *
                StrictHostKeyChecking no
                UserKnownHostsFile=/dev/null
    
    - name: Add group 'lxd' to user 'vagrant'
      user:
        name: vagrant
        groups: lxd
        append: yes
    
    - name: Create ssh key pair for user vagrant
      openssh_keypair:
        path: /home/vagrant/.ssh/id_rsa
        owner: vagrant
        group: vagrant

    - name: LXD configuration
      block:
        - name: Init LXD
          shell:
            cmd: |
              cat <<EOF | lxd init --preseed
              config:
                core.https_address: 127.0.0.1:8443
                core.trust_password: foglab
              networks:
              - name: lxdbr0
                type: bridge
                config:
                  bridge.driver: native
                  bridge.external_interfaces: eth1
                  bridge.mode: standard
                  ipv4.address: {{ base_segment }}.100/24
                  ipv4.dhcp: true
                  ipv4.dhcp.ranges: "{{ base_segment }}.101-{{ base_segment }}.254"
                  ipv4.firewall: false
                  ipv4.nat: "true"
                  ipv4.routing: true
                  ipv6.address: none
                  dns.domain: lab
                  dns.mode: managed
                  raw.dnsmasq: |
                    dhcp-option-force=26,1500
                    auth-zone=lab
                    dns-loop-detect
              storage_pools:
              - name: lxd
                driver: lvm
                config:
                  volume.size: 150GB
                  source: /dev/sdc
              profiles:
              - name: default
                config:
                  boot.autostart: true
                  linux.kernel_modules: bridge,br_netfilter,x_tables,ip_tables,ip6_tables,ip_vs,ip_vs,ip_vs_rr,ip_vs_wrr,ip_vs_sh,nf_conntrack_ipv4,ip_set,ipip,xt_mark,xt_multiport,ip_tunnel,tunnel4,netlink_diag,nfnetlink,nf_nat,overlay
                  raw.lxc: |
                    lxc.apparmor.profile=unconfined
                    lxc.mount.auto=proc:rw sys:rw cgroup:rw
                    lxc.cgroup.devices.allow=a
                    lxc.cap.drop=
                  security.nesting: "true"
                  security.privileged: "true"
                devices:
                  aadisable:
                    path: /sys/module/nf_conntrack/parameters/hashsize
                    source: /dev/null
                    type: disk
                  aadisable1:
                    path: /sys/module/apparmor/parameters/enabled
                    source: /dev/null
                    type: disk
                  eth0:
                    name: eth0
                    nictype: bridged
                    parent: lxdbr0
                    type: nic
                    mtu: 1500
                  root:
                    path: /
                    pool: lxd
                    type: disk
                  mem:
                    type: unix-char
                    path: /dev/mem
                  kmsg:
                    type: unix-char
                    path: /dev/kmsg
                
              cluster: null
              EOF
            creates: /var/lib/lxd/server.crt

        - name: Relax LXD security (used for disk attach)
          command: "echo Y | tee {{ item }}"
          loop:
            - /sys/module/fuse/parameters/userns_mounts
            - /sys/module/ext4/parameters/userns_mounts

    - name: Terraform
      block:
        - name: Download terraform
          get_url:
            url: https://releases.hashicorp.com/terraform/0.12.6/terraform_0.12.6_linux_amd64.zip
            dest: /tmp/terraform.zip
            checksum: sha256:6544eb55b3e916affeea0a46fe785329c36de1ba1bdb51ca5239d3567101876f
        
        - name: Extract terraform
          unarchive:
            src: /tmp/terraform.zip
            dest: /usr/local/bin
            remote_src: yes
            owner: vagrant
            group: vagrant
        
        - name: Download terraform-lxd plugin
          get_url:
            url: https://github.com/sl1pm4t/terraform-provider-lxd/releases/download/v1.2.0/terraform-provider-lxd_v1.2.0_linux_amd64.zip
            dest: /tmp/terraform_lxd.zip
        
        - name: Extract terraform-lxd plugin
          unarchive:
            src: /tmp/terraform_lxd.zip
            dest: /usr/local/bin
            owner: vagrant
            group: vagrant

        - name: Download terraform-inventory plugin
          get_url:
            url: https://github.com/adammck/terraform-inventory/releases/download/v0.9/terraform-inventory_0.9_linux_amd64.zip
            dest: /tmp/terraform-inventory.zip
        
        - name: Extract terraform-inventory plugin
          unarchive:
            src: /tmp/terraform-inventory.zip
            dest: /usr/local/bin
            owner: vagrant
            group: vagrant

    - name: localActions
      block:
        - name: create directory
          file:
            path: "{{ homedir }}/localActions"
            owner: root
            group: root
            mode: 0755
            state: directory
        - name: Copy the files
          copy:
            src: /tmp/localActions/
            dest: "{{ homedir }}/localActions"
            owner: root
            group: root
            mode: 0644
    
    - name: Examples
      block:
        - name: create directory
          file:
            path: "{{ homedir }}/examples"
            owner: root
            group: root
            mode: 0755
            state: directory
        - name: Copy the files
          copy:
            src: /tmp/examples/
            dest: "{{ homedir }}/examples"
            owner: root
            group: root
            mode: 0644
        
    - name: Scripts
      block:
        - name: create directory
          file:
            path: "{{ homedir }}/scripts"
            owner: root
            group: root
            mode: 0755
            state: directory
        - name: copy the files
          copy:
            src: /tmp/scripts/
            dest: "{{ homedir }}/scripts"
            owner: root
            group: root
            mode: 0655
        - name: config fogctl symbolic link
          file:
            dest: /usr/local/bin/fogctl
            src: "{{ homedir }}/scripts/fogctl.py"
            state: link

    - name: Configure dns
      block:
        - name: Dnsmasq config file 
          lineinfile:
            path: /etc/dnsmasq.conf
            line: "{{ item }}"
            create: yes
            owner: root
            group: root
            mode: 0644
          loop:
            - "listen-address=127.0.0.1"
            - "port=53"
            - "domain=lab"
            - "domain-needed"
            - "bogus-priv"
            - "strict-order"
            - "expand-hosts"
        - name: Dnsmasq lab config file 
          lineinfile:
            path: /etc/dnsmasq.d/lab
            line: "{{ item }}"
            create: yes
            owner: root
            group: root
            mode: 0644
          loop:
            - "server=/lab/{{ base_segment }}.100"
            - "bind-interfaces"
            - "except-interface=lxdbr0"
        - name: Remove resolv symlink
          file:
            path: /etc/resolv.conf
            state: absent
        - name: New resolv file 
          lineinfile:
            path: /etc/resolv.conf
            line: "{{ item }}"
            create: yes
            owner: root
            group: root
            mode: 0644
          loop:
            - "nameserver 127.0.0.1"
            - "nameserver 8.8.8.8"
        - name: Register foglab in dns 
          lineinfile:
            path: /etc/hosts
            line: "{{ item }}"
            create: yes
            owner: root
            group: root
            mode: 0644
          loop:
            - "127.0.0.1 foglab"
        - name: Disable systemd-resolved
          service:
            name: systemd-resolved
            state: stopped
            enabled: no
        - name: Service restart dnsmasq
          service:
            name: dnsmasq.service
            state: restarted
            enabled: yes

    - name: Cleanup
      block:
        - name: cleanup /tmp
          file:
            path: "/tmp/{{ item }}"
            state: absent
          loop:
            - scripts
            - localActions
            - examples

    - name: Register metadata
      lineinfile:
        path: /etc/profile.d/foglab.sh
        line: "export {{ item.name }}={{ item.value }}"
        create: yes
        owner: root
        group: root
        mode: 0644
      loop:
        - { name: "FOGLAB_HOME", value: "{{ homedir}}" }
        - { name: "FOGLAB_BASE_IP_SEGMENT", value: "{{ base_segment }}" }
        - { name: "FOGLAB_BUILD_DATE", value: "{{ ansible_facts['date_time']['iso8601'] }}" }
        - { name: "ANSIBLE_LOCALHOST_WARNING", value: "False"}
        
        

          